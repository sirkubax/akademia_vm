- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present

- name: Install docker and its dependecies
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - "containerd.io={{ containerd_io_version }}"
    - "docker-ce={{ docker_version }}"           
    - "docker-ce-cli={{ docker_version }}"       
  notify:
    - docker status

- name: Add ubuntu user to docker group
  user:
    name: "{{ docker_user }}"
    group: docker

- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - "kubelet={{ k8s_version }}"
      - "kubeadm={{ k8s_version }}"
      - "kubectl={{ k8s_version }}"

- name: Create Docker daemon configuration file 
  template:                                     
    dest: /etc/docker/daemon.json               
    src: daemon.json.j2                         

- name: Restart docker
  service:
    name: docker
    daemon_reload: yes
    state: restarted

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted
