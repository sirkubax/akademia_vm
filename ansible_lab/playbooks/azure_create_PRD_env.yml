# https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ansible-create-complete-vm
#
# az group create --name edm-poc-eu-west --location westeurope

- name: Create Azure VM
  hosts: localhost
  connection: local


  tasks:
  - name: Create a resource group
    azure_rm_resourcegroup:
      name: "{{ env_azure.resource_group_name }}"
      location: "{{ env_azure.location }}"
      subscription_id: "{{ env_azure.subscription_id |default('') }}"

  - name: Create virtual network
    azure_rm_virtualnetwork:
      resource_group: "{{ env_azure.resource_group_name }}"
      name: "{{ env_azure.vnet.name }}"
      address_prefixes: "{{ env_azure.vnet.ip }}"

  - name: Create Network Security Group that allows SSH
    azure_rm_securitygroup:
      resource_group: "{{ env_azure.resource_group_name }}"
      name: "{{ item.sg }}"
      rules: "{{ item.rules }}"
    with_items: "{{ env_azure.subnets }}"

  - name: Add subnet
    azure_rm_subnet:
      resource_group: "{{ env_azure.resource_group_name }}"
      name: "{{ item.name }}"
      address_prefix: "{{ item.ip }}"
      virtual_network: "{{ env_azure.vnet.name }}"
      security_group: "{% if item.name != 'GatewaySubnet' %}{{ item.sg }}{% endif %}"
    with_items: "{{ env_azure.subnets }}"

  - name: Create a public ip address
    azure_rm_publicipaddress:
      resource_group: "{{ env_azure.resource_group_name }}"
      name: vpn-gw-pub-ip
      allocation_method: Dynamic

#  - name: Create virtual network gateway without bgp settings
#    azure_rm_virtualnetworkgateway:
#      resource_group: "{{ env_azure.resource_group_name }}"
#      name: vpn-gw
#      ip_configurations:
#       - name: vpn-gw-pub-ip-conf
#         private_ip_allocation_method: Dynamic
#         public_ip_address_name: vpn-gw-pub-ip
#      virtual_network: "{{ env_azure.vnet.name }}"

  - name: Create virtual network inteface card
    azure_rm_networkinterface:
      resource_group: "{{ env_azure.resource_group_name }}"
      name: "{{ item.1.network_interface.name }}"
      virtual_network: "{{ env_azure.vnet.name }}"
      subnet: "{{ item.0.name }}"
      ip_configurations: 
      - name: default
        primary: True
        public_ip_address_name: "{{ item.1.network_interface.public_ip | default('') }}"
        public_ip_allocation_method: Static
      security_group: "{{ item.0.sg }}"
    loop: "{{ env_azure.subnets | subelements('vm') }}"
    loop_control:
      label: "{{ item.0.name }}"

  - name: Create VM
    azure_rm_virtualmachine:
      resource_group: "{{ env_azure.resource_group_name }}"
      name: "{{ item.1.name }}"
      vm_size: "{{ item.1.vm_size }}"
      os_disk_size_gb: "{{ item.1.os_disk_size_gb | default('20') }}"
      admin_username: "{{ item.1.username }}"
      ssh_password_enabled: false
      ssh_public_keys: 
        - path: "/home/{{ item.1.username }}/.ssh/authorized_keys"
          key_data: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC5j+1yfVvGbov764UaZSyfTzNrRs+eo6ckOkwZkEbhCiqTGZV6KfP/ku8az3bafT69Qc3UaMiZdQiA4jxcsMNiDMqycrftG22BSca+rMIAhh1NwY28Yq8/3RlyStFveUdo9haKFqfO4pCnJKmyVgg4m/uzL3x7pyTn5un6Ewb9bAL6ZtgIOPm8WNyrqFsSV0Vmwtl9Xbv4xc9QrCEpFYvc6WdlyKF23podIJQFhHBoWLeOfbL4Fbfvy3mTOlnz88abwBfpwHSSTcQUckE+9lOTpqLYBYKCUw6mCSb4UHeTIonQeZrWjgp/eBHscJGtN0DUcsY3/x9wb6LzUyoJRZrKPnbkQTMHmcOX70Dowz/Wnz2a8eHCpHLrwD5qtrQJR/Sc+d5sMSG8h3lbVLzMj9GfNtf/UtlPMTWy51bdEYrZsH20VNuoKq8lNCeCMB8MoeIvOdPExg/MEF5TGfAE8Hr7d3rmfEjRJ78byNFUHI0g6+vvtuGQCBf60+4f9Z4S+T8= examplekey"
      network_interfaces: "{{ item.1.network_interface.name }}"
      image:
          offer: "{{ item.1.image.offer | default(vm_default_image.offer) }}"
          publisher: "{{ item.1.image.publisher  | default(vm_default_image.publisher)}}"
          sku: "{{ item.1.image.sku  | default(vm_default_image.sku)}}" 
          version:  "{{ item.1.image.version  | default(vm_default_image.version )}}"
      managed_disk_type: "{{ item.1.managed_disk_type }}"
      data_disks: "{{ item.1.data_disks }}"
    loop: "{{ env_azure.subnets | subelements('vm') }}"
    loop_control:
      label: "{{ item.0.name }}"
    tags:
     - vm

#  - name: Create VM Extension
#    azure_rm_virtualmachineextension:
#      name: AzureMonitorLinuxAgent
#      location: "{{ env_azure.location }}"
#      #location: eastus
#      resource_group: "{{ env_azure.resource_group_name }}"
#      #resource_group: myResourceGroup
#      virtual_machine_name: k8s-node-1
#      publisher: Microsoft.Azure.Monitoring
#      #publisher: Microsoft.EnterpriseCloud.Monitoring
#      virtual_machine_extension_type: OmsAgentForLinux
#      type_handler_version: 1.10
#      #settings: '{"workspaceId": "myWorkspaceId", "workspaceKey": "myWorkSpaceKey"}'
#      settings: '{"settings": {"workspaceId": "891529b0-afd6-455b-9304-0d0a465fc783"}, "protectedSettings": {"workspaceKey": "kZMdweUB8LL+y098L0CBj3himXN8QyA2SxQSouANm0gHkZ/dtD5NYSpw8pXic6N2s4Msh/Tgg6nMxnqyEfWK8w=="}}'
#      auto_upgrade_minor_version: true
#    tags:
#     - vm_ext

#https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/oms-linux
#{
#  "type": "Microsoft.Compute/virtualMachines/extensions",
#  "name": "<parentVmResource>/OMSExtension",
#  "apiVersion": "2018-06-01",
#  "location": "<location>",
#  "dependsOn": [
#    "[concat('Microsoft.Compute/virtualMachines/', <vm-name>)]"
#  ],
#  "properties": {
#    "publisher": "Microsoft.EnterpriseCloud.Monitoring",
#    "type": "OmsAgentForLinux",
#    "typeHandlerVersion": "1.13",
#    "settings": {
#      "workspaceId": "myWorkspaceId"
#    },
#    "protectedSettings": {
#      "workspaceKey": "myWorkSpaceKey"
#    }
#  }
#}

#xanmanning.k3s would form a cluster if play_hosts > 1 so we do it one-by-one
#- hosts: k3s_nodes[0:1]
#  become: true
#
#  vars:
#    k3s_flags: "--no-deploy traefik"
#
#  roles:
#    - role: xanmanning.k3s
#      tags: k3s_nodes
#      vars:
#        #k3s_become_for_install_dir: true
#        #k3s_become_for_directory_creation: true
#        k3s_become_for_all: true
#
#    #https://galaxy.ansible.com/pandemonium1986/k8s_toolbox
#    - role: k9s
#      tags: k9s
#    - role: sys_manage_keys
#      tags: ssh_keys

- hosts: k8s_nodes
  tags:
    - k8s
  become: true

  roles:
#    #https://galaxy.ansible.com/pandemonium1986/k8s_toolbox
    - role: k9s
      tags: k9s
    - role: k8s
      tags: k8s
    - role: sys_manage_keys
      tags: ssh_keys
###

#- hosts: k3s_nodes[2]
#  tags:
#    - k8s
#  become: true
#
#  vars:
#    #node_ip: 13.95.220.83
#    node_ip: 10.39.1.7
#
#  roles:
#    - role: xanmanning.k3s
#      tags: k3s_nodes
#      vars:
#        #k3s_become_for_install_dir: true
#        #k3s_become_for_directory_creation: true
#        k3s_become_for_all: true
#
#    #https://galaxy.ansible.com/pandemonium1986/k8s_toolbox
#    - role: k9s
#      tags: k9s
#    - role: sys_manage_keys
#      tags: ssh_keys

- hosts: k3s_nodes_cluster
  become: true
  
  vars:
    k3s_flags: "--no-deploy traefik"
    #node_ip: "{{ inventory_hostname }}"
    #extra_k8s_flags: " --apiserver-cert-extra-sans {{ inventory_hostname }} "

  roles:
    - role: xanmanning.k3s
      tags: k3s_nodes
      vars:
        #k3s_become_for_install_dir: true
        #k3s_become_for_directory_creation: true
        k3s_become_for_all: true

    #https://galaxy.ansible.com/pandemonium1986/k8s_toolbox
    - role: k9s
      tags: k9s
    - role: sys_manage_keys
      tags: ssh_keys
    #- role: k8s
    #  tags: k8s


